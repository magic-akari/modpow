import { assertEquals } from "https://deno.land/std@0.138.0/testing/asserts.ts";
import { modPow } from "./modpow.ts";

// https://github.com/rust-num/num-bigint/blob/125fbbdb4887b995b0fe566b139f36196b5735b5/tests/modpow.rs
const BIG_B =
  0xefac3c0a_0de55551_fee0bfe4_67fa017a_1a898fa1_6ca57cb1_ca9e3248_cacc09a9_b99d6abc_38418d0f_82ae4238_d9a68832_aadec7c1_ac5fed48_7a56a71b_67ac59d5_afb28022_20d9592d_247c4efc_abbd9b75_586088ee_1dc00dc4_232a8e15_6e8191dd_675b6ae0_c80f5164_752940bc_284b7cee_885c1e10_e495345b_8fbe9cfd_e5233fe1_19459d0b_d64be53c_27de5a02_a829976b_33096862_82dad291_bd38b6a9_be396646_ddaf8039_a2573c39_1b14e8bc_2cb53e48_298c047e_d9879e9c_5a521076_f0e27df3_990e1659_d3d8205b_6443ebc0_9918ebee_6764f668_9f2b2be3_b59cbc76_d76d0dfc_d737c3ec_0ccf9c00_ad0554bf_17e776ad_b4edf9cc_6ce540be_76229093_5c53893bn;

const BIG_E =
  0xbe0e6ea6_08746133_e0fbc1bf_82dba91e_e2b56231_a81888d2_a833a1fc_f7ff002a_3c486a13_4f420bf3_a5435be9_1a5c8391_774d6e6c_085d8357_b0c97d4d_2bb33f7c_34c68059_f78d2541_eacc8832_426f1816_d3be001e_b69f9242_51c7708e_e10efe98_449c9a4a_b55a0f23_9d797410_515da00d_3ea07970_4478a2ca_c3d5043c_bd9be1b4_6dce479d_4302d344_84a939e6_0ab5ada7_12ae34b2_30cc473c_9f8ee69d_2cac5970_29f5bf18_bc8203e4_f3e895a2_13c94f1e_24c73d77_e517e801_53661fdd_a2ce9e47_a73dd7f8_2f2adb1e_3f136bf7_8ae5f3b8_08730de1_a4eff678_e77a06d0_19a522eb_cbefba2a_9caf7736_b157c5c6_2d192591_17946850_2ddb1822_117b68a0_32f7db88n;

// This modulus is the prime from the 2048-bit MODP DH group:
// https://tools.ietf.org/html/rfc3526#section-3

const BIG_M =
  0xffffffff_ffffffff_c90fdaa2_2168c234_c4c6628b_80dc1cd1_29024e08_8a67cc74_020bbea6_3b139b22_514a0879_8e3404dd_ef9519b3_cd3a431b_302b0a6d_f25f1437_4fe1356d_6d51c245_e485b576_625e7ec6_f44c42e9_a637ed6b_0bff5cb6_f406b7ed_ee386bfb_5a899fa5_ae9f2411_7c4b1fe6_49286651_ece45b3d_c2007cb8_a163bf05_98da4836_1c55d39a_69163fa8_fd24cf5f_83655d23_dca3ad96_1c62f356_208552bb_9ed52907_7096966d_670c354e_4abc9804_f1746c08_ca18217c_32905e46_2e36ce3b_e39e772c_180e8603_9b2783a2_ec07a28f_b5c55df0_6f4c52c9_de2bcbf6_95581718_3995497c_ea956ae5_15d22618_98fa0510_15728e5a_8aacaa68_ffffffff_ffffffffn;

const BIG_R =
  0xa1468311_6e56edc9_7a98228b_5e924776_0dd7836e_caabac13_eda5373b_4752aa65_a1454850_40dc770e_30aa8675_6be7d3a8_9d3085e4_da5155cf_b451ef62_54d0da61_cf2b2c87_f495e096_055309f7_77802bbb_37271ba8_1313f1b5_075c75d1_024b6c77_fdb56f17_b05bce61_e527ebfd_2ee86860_e9907066_edd526e7_93d289bf_6726b293_41b0de24_eff82424_8dfd374b_4ec59542_35ced2b2_6b195c90_10042ffb_8f58ce21_bc10ec42_64fda779_d352d234_3d4eaea6_a86111ad_a37e9555_43ca78ce_2885bed7_5a30d182_f1cf6834_dc5b6e27_1a41ac34_a2e91e11_33363ff0_f88a7b04_900227c9_f6e6d06b_7856b4bb_4e354d61_060db6c8_109c4735_6e7db425_7b5d74c7_0b709508n;

Deno.test({
  name: "test modpow big",
  fn() {
    assertEquals(modPow(BIG_B, BIG_E, BIG_M), BIG_R);
  },
});
